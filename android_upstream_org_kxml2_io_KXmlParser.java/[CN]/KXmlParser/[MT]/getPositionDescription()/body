{
  StringBuilder buf=new StringBuilder(type < TYPES.length ? TYPES[type] : "unknown");
  buf.append(' ');
  if (type == START_TAG || type == END_TAG) {
    if (degenerated) {
      buf.append("(empty) ");
    }
    buf.append('<');
    if (type == END_TAG) {
      buf.append('/');
    }
    if (prefix != null) {
      buf.append("{" + namespace + "}"+ prefix+ ":");
    }
    buf.append(name);
    int cnt=attributeCount * 4;
    for (int i=0; i < cnt; i+=4) {
      buf.append(' ');
      if (attributes[i + 1] != null) {
        buf.append("{" + attributes[i] + "}"+ attributes[i + 1]+ ":");
      }
      buf.append(attributes[i + 2] + "='" + attributes[i + 3]+ "'");
    }
    buf.append('>');
  }
 else   if (type == IGNORABLE_WHITESPACE) {
    ;
  }
 else   if (type != TEXT) {
    buf.append(getText());
  }
 else   if (isWhitespace) {
    buf.append("(whitespace)");
  }
 else {
    String text=getText();
    if (text.length() > 16) {
      text=text.substring(0,16) + "...";
    }
    buf.append(text);
  }
  buf.append("@" + getLineNumber() + ":"+ getColumnNumber());
  if (location != null) {
    buf.append(" in ");
    buf.append(location);
  }
 else   if (reader != null) {
    buf.append(" in ");
    buf.append(reader.toString());
  }
  return buf.toString();
}
