{
  sb.append('[');
  sb.append("\n  Version: V").append(version + 1);
  sb.append("\n  Subject: ").append(subject.getName(X500Principal.RFC2253));
  sb.append("\n  Signature Algorithm: ");
  signature.dumpValue(sb);
  sb.append("\n  Key: ").append(subjectPublicKeyInfo.getPublicKey().toString());
  sb.append("\n  Validity: [From: ").append(validity.getNotBefore());
  sb.append("\n               To: ").append(validity.getNotAfter()).append(']');
  sb.append("\n  Issuer: ").append(issuer.getName(X500Principal.RFC2253));
  sb.append("\n  Serial Number: ").append(serialNumber);
  if (issuerUniqueID != null) {
    sb.append("\n  Issuer Id: ");
    for (    boolean b : issuerUniqueID) {
      sb.append(b ? '1' : '0');
    }
  }
  if (subjectUniqueID != null) {
    sb.append("\n  Subject Id: ");
    for (    boolean b : subjectUniqueID) {
      sb.append(b ? '1' : '0');
    }
  }
  if (extensions != null) {
    sb.append("\n\n  Extensions: ");
    sb.append("[\n");
    extensions.dumpValue(sb,"    ");
    sb.append("  ]");
  }
  sb.append("\n]");
}
