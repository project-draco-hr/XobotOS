{
  FileDescriptor fd=null;
  try {
    fd=Libcore.os.socket(AF_INET,SOCK_DGRAM,0);
    InetAddress address=Libcore.os.ioctlInetAddress(fd,SIOCGIFADDR,interfaceName);
    InetAddress broadcast=Libcore.os.ioctlInetAddress(fd,SIOCGIFBRDADDR,interfaceName);
    InetAddress netmask=Libcore.os.ioctlInetAddress(fd,SIOCGIFNETMASK,interfaceName);
    if (broadcast.equals(Inet4Address.ANY)) {
      broadcast=null;
    }
    addresses.add(address);
    interfaceAddresses.add(new InterfaceAddress((Inet4Address)address,(Inet4Address)broadcast,(Inet4Address)netmask));
  }
 catch (  ErrnoException errnoException) {
    if (errnoException.errno != EADDRNOTAVAIL) {
      throw rethrowAsSocketException(errnoException);
    }
  }
catch (  Exception ex) {
    throw rethrowAsSocketException(ex);
  }
 finally {
    IoUtils.closeQuietly(fd);
  }
}
