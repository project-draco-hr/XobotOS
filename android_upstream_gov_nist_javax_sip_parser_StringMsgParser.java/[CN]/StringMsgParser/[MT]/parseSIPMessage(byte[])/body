{
  if (msgBuffer == null || msgBuffer.length == 0)   return null;
  int i=0;
  try {
    while (msgBuffer[i] < 0x20)     i++;
  }
 catch (  ArrayIndexOutOfBoundsException e) {
    return null;
  }
  String currentLine=null;
  String currentHeader=null;
  boolean isFirstLine=true;
  SIPMessage message=null;
  do {
    int lineStart=i;
    try {
      while (msgBuffer[i] != '\r' && msgBuffer[i] != '\n')       i++;
    }
 catch (    ArrayIndexOutOfBoundsException e) {
      break;
    }
    int lineLength=i - lineStart;
    try {
      currentLine=new String(msgBuffer,lineStart,lineLength,"UTF-8");
    }
 catch (    UnsupportedEncodingException e) {
      throw new ParseException("Bad message encoding!",0);
    }
    currentLine=trimEndOfLine(currentLine);
    if (currentLine.length() == 0) {
      if (currentHeader != null && message != null) {
        processHeader(currentHeader,message);
      }
    }
 else {
      if (isFirstLine) {
        message=processFirstLine(currentLine);
      }
 else {
        char firstChar=currentLine.charAt(0);
        if (firstChar == '\t' || firstChar == ' ') {
          if (currentHeader == null)           throw new ParseException("Bad header continuation.",0);
          currentHeader+=currentLine.substring(1);
        }
 else {
          if (currentHeader != null && message != null) {
            processHeader(currentHeader,message);
          }
          currentHeader=currentLine;
        }
      }
    }
    if (msgBuffer[i] == '\r' && msgBuffer.length > i + 1 && msgBuffer[i + 1] == '\n')     i++;
    i++;
    isFirstLine=false;
  }
 while (currentLine.length() > 0);
  if (message == null)   throw new ParseException("Bad message",0);
  message.setSize(i);
  if (readBody && message.getContentLength() != null && message.getContentLength().getContentLength() != 0) {
    int bodyLength=msgBuffer.length - i;
    byte[] body=new byte[bodyLength];
    System.arraycopy(msgBuffer,i,body,0,bodyLength);
    message.setMessageContent(body,computeContentLengthFromMessage,message.getContentLength().getContentLength());
  }
  return message;
}
