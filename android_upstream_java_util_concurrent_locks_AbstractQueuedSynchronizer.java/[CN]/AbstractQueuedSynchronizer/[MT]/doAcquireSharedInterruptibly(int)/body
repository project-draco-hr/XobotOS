{
  final Node node=addWaiter(Node.SHARED);
  boolean failed=true;
  try {
    for (; ; ) {
      final Node p=node.predecessor();
      if (p == head) {
        int r=tryAcquireShared(arg);
        if (r >= 0) {
          setHeadAndPropagate(node,r);
          p.next=null;
          failed=false;
          return;
        }
      }
      if (shouldParkAfterFailedAcquire(p,node) && parkAndCheckInterrupt())       throw new InterruptedException();
    }
  }
  finally {
    if (failed)     cancelAcquire(node);
  }
}
