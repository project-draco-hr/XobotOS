{
  checkNotClosed();
  validateKey(key);
  Entry entry=lruEntries.get(key);
  if (entry == null) {
    return null;
  }
  if (!entry.readable) {
    return null;
  }
  InputStream[] ins=new InputStream[valueCount];
  try {
    for (int i=0; i < valueCount; i++) {
      ins[i]=new FileInputStream(entry.getCleanFile(i));
    }
  }
 catch (  FileNotFoundException e) {
    return null;
  }
  redundantOpCount++;
  journalWriter.append(READ + ' ' + key+ '\n');
  if (journalRebuildRequired()) {
    executorService.submit(cleanupCallable);
  }
  return new Snapshot(ins);
}
