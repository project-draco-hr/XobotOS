{
  TimeZone timeZone=getTimeZone();
  int dstOffset=timeZone.inDaylightTime(new Date(time)) ? timeZone.getDSTSavings() : 0;
  int zoneOffset=timeZone.getRawOffset();
  fields[DST_OFFSET]=dstOffset;
  fields[ZONE_OFFSET]=zoneOffset;
  int millis=(int)(time % 86400000);
  int savedMillis=millis;
  int offset=zoneOffset + dstOffset;
  long newTime=time + offset;
  if (time > 0L && newTime < 0L && offset > 0) {
    newTime=0x7fffffffffffffffL;
  }
 else   if (time < 0L && newTime > 0L && offset < 0) {
    newTime=0x8000000000000000L;
  }
  if (isCached) {
    if (millis < 0) {
      millis+=86400000;
    }
    millis+=zoneOffset;
    millis+=dstOffset;
    if (millis < 0) {
      millis+=86400000;
    }
 else     if (millis >= 86400000) {
      millis-=86400000;
    }
    fields[MILLISECOND]=(millis % 1000);
    millis/=1000;
    fields[SECOND]=(millis % 60);
    millis/=60;
    fields[MINUTE]=(millis % 60);
    millis/=60;
    fields[HOUR_OF_DAY]=(millis % 24);
    millis/=24;
    fields[AM_PM]=fields[HOUR_OF_DAY] > 11 ? 1 : 0;
    fields[HOUR]=fields[HOUR_OF_DAY] % 12;
    long newTimeAdjusted=newTime;
    if (timeZone.useDaylightTime()) {
      int dstSavings=timeZone.getDSTSavings();
      newTimeAdjusted+=(dstOffset == 0) ? dstSavings : -dstSavings;
    }
    if (newTime > 0L && newTimeAdjusted < 0L && dstOffset == 0) {
      newTimeAdjusted=0x7fffffffffffffffL;
    }
 else     if (newTime < 0L && newTimeAdjusted > 0L && dstOffset != 0) {
      newTimeAdjusted=0x8000000000000000L;
    }
    cachedFieldsCheckAndGet(time,newTime,newTimeAdjusted,savedMillis,zoneOffset);
  }
 else {
    fullFieldsCalc(time,savedMillis,zoneOffset);
  }
  for (int i=0; i < FIELD_COUNT; i++) {
    isSet[i]=true;
  }
  if (!isCached && newTime != 0x7fffffffffffffffL && newTime != 0x8000000000000000L && (!timeZone.useDaylightTime() || timeZone instanceof SimpleTimeZone)) {
    int cacheMillis=0;
    cachedFields[0]=fields[YEAR];
    cachedFields[1]=fields[MONTH];
    cachedFields[2]=fields[DATE];
    cachedFields[3]=fields[DAY_OF_WEEK];
    cachedFields[4]=zoneOffset;
    cachedFields[5]=fields[ERA];
    cachedFields[6]=fields[WEEK_OF_YEAR];
    cachedFields[7]=fields[WEEK_OF_MONTH];
    cachedFields[8]=fields[DAY_OF_YEAR];
    cachedFields[9]=fields[DAY_OF_WEEK_IN_MONTH];
    cacheMillis+=(23 - fields[HOUR_OF_DAY]) * 60 * 60* 1000;
    cacheMillis+=(59 - fields[MINUTE]) * 60 * 1000;
    cacheMillis+=(59 - fields[SECOND]) * 1000;
    nextMidnightMillis=newTime + cacheMillis;
    cacheMillis=fields[HOUR_OF_DAY] * 60 * 60* 1000;
    cacheMillis+=fields[MINUTE] * 60 * 1000;
    cacheMillis+=fields[SECOND] * 1000;
    lastMidnightMillis=newTime - cacheMillis;
    isCached=true;
  }
}
