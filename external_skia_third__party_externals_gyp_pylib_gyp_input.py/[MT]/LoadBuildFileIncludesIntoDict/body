def LoadBuildFileIncludesIntoDict(subdict, subdict_path, data, aux_data, variables, includes, check):
    includes_list = []
    if (includes != None):
        includes_list.extend(includes)
    if ('includes' in subdict):
        for include in subdict['includes']:
            relative_include = os.path.normpath(os.path.join(os.path.dirname(subdict_path), include))
            includes_list.append(relative_include)
        del subdict['includes']
    for include in includes_list:
        if (not ('included' in aux_data[subdict_path])):
            aux_data[subdict_path]['included'] = []
        aux_data[subdict_path]['included'].append(include)
        gyp.DebugOutput(gyp.DEBUG_INCLUDES, ("Loading Included File: '%s'" % include))
        MergeDicts(subdict, LoadOneBuildFile(include, data, aux_data, variables, None, False, check), subdict_path, include)
    for (k, v) in subdict.iteritems():
        if (v.__class__ == dict):
            LoadBuildFileIncludesIntoDict(v, subdict_path, data, aux_data, variables, None, check)
        elif (v.__class__ == list):
            LoadBuildFileIncludesIntoList(v, subdict_path, data, aux_data, variables, check)
