def CheckNode(node, keypath):
    if isinstance(node, Dict):
        c = node.getChildren()
        dict = {}
        for n in range(0, len(c), 2):
            assert isinstance(c[n], Const)
            key = c[n].getChildren()[0]
            if (key in dict):
                raise KeyError, (((((("Key '" + key) + "' repeated at level ") + repr((len(keypath) + 1))) + " with key path '") + '.'.join(keypath)) + "'")
            kp = list(keypath)
            kp.append(key)
            dict[key] = CheckNode(c[(n + 1)], kp)
        return dict
    elif isinstance(node, List):
        c = node.getChildren()
        children = []
        for (index, child) in enumerate(c):
            kp = list(keypath)
            kp.append(repr(index))
            children.append(CheckNode(child, kp))
        return children
    elif isinstance(node, Const):
        return node.getChildren()[0]
    else:
        raise TypeError, ((("Unknown AST node at key path '" + '.'.join(keypath)) + "': ") + repr(node))
