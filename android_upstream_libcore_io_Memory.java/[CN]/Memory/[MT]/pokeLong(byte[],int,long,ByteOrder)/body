{
  if (order == ByteOrder.BIG_ENDIAN) {
    int i=(int)(value >> 32);
    dst[offset++]=(byte)((i >> 24) & 0xff);
    dst[offset++]=(byte)((i >> 16) & 0xff);
    dst[offset++]=(byte)((i >> 8) & 0xff);
    dst[offset++]=(byte)((i >> 0) & 0xff);
    i=(int)value;
    dst[offset++]=(byte)((i >> 24) & 0xff);
    dst[offset++]=(byte)((i >> 16) & 0xff);
    dst[offset++]=(byte)((i >> 8) & 0xff);
    dst[offset]=(byte)((i >> 0) & 0xff);
  }
 else {
    int i=(int)value;
    dst[offset++]=(byte)((i >> 0) & 0xff);
    dst[offset++]=(byte)((i >> 8) & 0xff);
    dst[offset++]=(byte)((i >> 16) & 0xff);
    dst[offset++]=(byte)((i >> 24) & 0xff);
    i=(int)(value >> 32);
    dst[offset++]=(byte)((i >> 0) & 0xff);
    dst[offset++]=(byte)((i >> 8) & 0xff);
    dst[offset++]=(byte)((i >> 16) & 0xff);
    dst[offset]=(byte)((i >> 24) & 0xff);
  }
}
