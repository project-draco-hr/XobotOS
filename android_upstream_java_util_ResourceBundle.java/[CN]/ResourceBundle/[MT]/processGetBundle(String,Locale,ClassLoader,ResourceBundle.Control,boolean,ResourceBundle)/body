{
  List<Locale> locales=control.getCandidateLocales(baseName,targetLocale);
  if (locales == null) {
    throw new IllegalArgumentException();
  }
  List<String> formats=control.getFormats(baseName);
  if (Control.FORMAT_CLASS == formats || Control.FORMAT_PROPERTIES == formats || Control.FORMAT_DEFAULT == formats) {
    throw new IllegalArgumentException();
  }
  ResourceBundle ret=null;
  ResourceBundle currentBundle=null;
  ResourceBundle bundle=null;
  for (  Locale locale : locales) {
    for (    String format : formats) {
      try {
        if (expired) {
          bundle=control.newBundle(baseName,locale,format,loader,control.needsReload(baseName,locale,format,loader,result,System.currentTimeMillis()));
        }
 else {
          try {
            bundle=control.newBundle(baseName,locale,format,loader,false);
          }
 catch (          IllegalArgumentException e) {
          }
        }
      }
 catch (      IllegalAccessException e) {
      }
catch (      InstantiationException e) {
      }
catch (      IOException e) {
      }
      if (bundle != null) {
        if (currentBundle != null) {
          currentBundle.setParent(bundle);
          currentBundle=bundle;
        }
 else {
          if (ret == null) {
            ret=bundle;
            currentBundle=ret;
          }
        }
      }
      if (bundle != null) {
        break;
      }
    }
  }
  if ((ret == null) || (Locale.ROOT.equals(ret.getLocale()) && (!(locales.size() == 1 && locales.contains(Locale.ROOT))))) {
    Locale nextLocale=control.getFallbackLocale(baseName,targetLocale);
    if (nextLocale != null) {
      ret=processGetBundle(baseName,nextLocale,loader,control,expired,result);
    }
  }
  return ret;
}
