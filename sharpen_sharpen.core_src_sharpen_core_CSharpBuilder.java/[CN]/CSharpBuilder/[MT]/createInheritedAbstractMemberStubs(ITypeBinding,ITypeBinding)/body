{
  IMethodBinding[] methods=baseType.getDeclaredMethods();
  for (int i=0; i < methods.length; ++i) {
    IMethodBinding method=methods[i];
    if (!Modifier.isAbstract(method.getModifiers())) {
      continue;
    }
    if (null != BindingUtils.findOverriddenMethodInTypeOrSuperclasses(type,method)) {
      continue;
    }
    if (isIgnored(originalMethodBinding(method))) {
      continue;
    }
    if (stubIsProperty(method)) {
      _currentType.addMember(createAbstractPropertyStub(method));
    }
 else {
      CSMethod newMethod=createAbstractMethodStub(method);
      if (!_currentType.members().contains(newMethod)) {
        _currentType.addMember(newMethod);
      }
    }
  }
}
