{
  PhoneNumberDesc generalNumberDesc=metadata.getGeneralDesc();
  if (!generalNumberDesc.hasNationalNumberPattern() || !isNumberMatchingDesc(nationalNumber,generalNumberDesc)) {
    return PhoneNumberType.UNKNOWN;
  }
  if (isNumberMatchingDesc(nationalNumber,metadata.getPremiumRate())) {
    return PhoneNumberType.PREMIUM_RATE;
  }
  if (isNumberMatchingDesc(nationalNumber,metadata.getTollFree())) {
    return PhoneNumberType.TOLL_FREE;
  }
  if (isNumberMatchingDesc(nationalNumber,metadata.getSharedCost())) {
    return PhoneNumberType.SHARED_COST;
  }
  if (isNumberMatchingDesc(nationalNumber,metadata.getVoip())) {
    return PhoneNumberType.VOIP;
  }
  if (isNumberMatchingDesc(nationalNumber,metadata.getPersonalNumber())) {
    return PhoneNumberType.PERSONAL_NUMBER;
  }
  if (isNumberMatchingDesc(nationalNumber,metadata.getPager())) {
    return PhoneNumberType.PAGER;
  }
  if (isNumberMatchingDesc(nationalNumber,metadata.getUan())) {
    return PhoneNumberType.UAN;
  }
  boolean isFixedLine=isNumberMatchingDesc(nationalNumber,metadata.getFixedLine());
  if (isFixedLine) {
    if (metadata.isSameMobileAndFixedLinePattern()) {
      return PhoneNumberType.FIXED_LINE_OR_MOBILE;
    }
 else     if (isNumberMatchingDesc(nationalNumber,metadata.getMobile())) {
      return PhoneNumberType.FIXED_LINE_OR_MOBILE;
    }
    return PhoneNumberType.FIXED_LINE;
  }
  if (!metadata.isSameMobileAndFixedLinePattern() && isNumberMatchingDesc(nationalNumber,metadata.getMobile())) {
    return PhoneNumberType.MOBILE;
  }
  return PhoneNumberType.UNKNOWN;
}
