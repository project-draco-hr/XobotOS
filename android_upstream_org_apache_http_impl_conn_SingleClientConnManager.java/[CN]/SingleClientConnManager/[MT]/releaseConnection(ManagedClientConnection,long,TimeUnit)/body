{
  assertStillUp();
  if (!(conn instanceof ConnAdapter)) {
    throw new IllegalArgumentException("Connection class mismatch, " + "connection not obtained from this manager.");
  }
  if (log.isDebugEnabled()) {
    log.debug("Releasing connection " + conn);
  }
  ConnAdapter sca=(ConnAdapter)conn;
  if (sca.poolEntry == null)   return;
  ClientConnectionManager manager=sca.getManager();
  if (manager != null && manager != this) {
    throw new IllegalArgumentException("Connection not obtained from this manager.");
  }
  try {
    final Socket socket=uniquePoolEntry.connection.getSocket();
    if (socket != null) {
      SocketTagger.get().untag(socket);
    }
    if (sca.isOpen() && (this.alwaysShutDown || !sca.isMarkedReusable())) {
      if (log.isDebugEnabled()) {
        log.debug("Released connection open but not reusable.");
      }
      sca.shutdown();
    }
  }
 catch (  IOException iox) {
    if (log.isDebugEnabled())     log.debug("Exception shutting down released connection.",iox);
  }
 finally {
    sca.detach();
    managedConn=null;
    lastReleaseTime=System.currentTimeMillis();
    if (validDuration > 0)     connectionExpiresTime=timeUnit.toMillis(validDuration) + lastReleaseTime;
 else     connectionExpiresTime=Long.MAX_VALUE;
  }
}
