{
  if (object == null) {
    throw new NotActiveException();
  }
  List<ObjectStreamClass> hierarchy=classDesc.getHierarchy();
  for (int i=0, end=hierarchy.size(); i < end; ++i) {
    ObjectStreamClass osc=hierarchy.get(i);
    currentObject=object;
    currentClass=osc;
    try {
      boolean executed=false;
      if (osc.hasMethodWriteObject()) {
        final Method method=osc.getMethodWriteObject();
        try {
          method.invoke(object,new Object[]{this});
          executed=true;
        }
 catch (        InvocationTargetException e) {
          Throwable ex=e.getTargetException();
          if (ex instanceof RuntimeException) {
            throw (RuntimeException)ex;
          }
 else           if (ex instanceof Error) {
            throw (Error)ex;
          }
          throw (IOException)ex;
        }
catch (        IllegalAccessException e) {
          throw new RuntimeException(e.toString());
        }
      }
      if (executed) {
        drain();
        output.writeByte(TC_ENDBLOCKDATA);
      }
 else {
        defaultWriteObject();
      }
    }
  finally {
      currentObject=null;
      currentClass=null;
      currentPutField=null;
    }
  }
}
