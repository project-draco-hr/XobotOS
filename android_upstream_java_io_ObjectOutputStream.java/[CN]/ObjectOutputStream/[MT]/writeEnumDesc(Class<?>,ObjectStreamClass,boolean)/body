{
  classDesc.setFlags((byte)(SC_SERIALIZABLE | SC_ENUM));
  int previousHandle=-1;
  if (unshared) {
    previousHandle=objectsWritten.get(classDesc);
  }
  int handle=-1;
  if (!unshared) {
    handle=dumpCycle(classDesc);
  }
  if (handle == -1) {
    Class<?> classToWrite=classDesc.forClass();
    registerObjectWritten(classDesc);
    output.writeByte(TC_CLASSDESC);
    if (protocolVersion == PROTOCOL_VERSION_1) {
      writeNewClassDesc(classDesc);
    }
 else {
      primitiveTypes=output;
      writeClassDescriptor(classDesc);
      primitiveTypes=null;
    }
    annotateClass(classToWrite);
    drain();
    output.writeByte(TC_ENDBLOCKDATA);
    ObjectStreamClass superClassDesc=classDesc.getSuperclass();
    if (superClassDesc != null) {
      superClassDesc.setFlags((byte)(SC_SERIALIZABLE | SC_ENUM));
      writeEnumDesc(superClassDesc.forClass(),superClassDesc,unshared);
    }
 else {
      output.writeByte(TC_NULL);
    }
    if (unshared) {
      removeUnsharedReference(classDesc,previousHandle);
    }
  }
  return classDesc;
}
