{
  SchemaFactory sf;
  String propertyName=SERVICE_CLASS.getName() + ":" + schemaLanguage;
  try {
    if (debug)     debugPrintln("Looking up system property '" + propertyName + "'");
    String r=System.getProperty(propertyName);
    if (r != null && r.length() > 0) {
      if (debug)       debugPrintln("The value is '" + r + "'");
      sf=createInstance(r);
      if (sf != null)       return sf;
    }
 else     if (debug) {
      debugPrintln("The property is undefined.");
    }
  }
 catch (  VirtualMachineError vme) {
    throw vme;
  }
catch (  ThreadDeath td) {
    throw td;
  }
catch (  Throwable t) {
    if (debug) {
      debugPrintln("failed to look up system property '" + propertyName + "'");
      t.printStackTrace();
    }
  }
  String javah=System.getProperty("java.home");
  String configFile=javah + File.separator + "lib"+ File.separator+ "jaxp.properties";
  String factoryClassName=null;
  try {
    if (firstTime) {
synchronized (cacheProps) {
        if (firstTime) {
          File f=new File(configFile);
          firstTime=false;
          if (f.exists()) {
            if (debug)             debugPrintln("Read properties file " + f);
            cacheProps.load(new FileInputStream(f));
          }
        }
      }
    }
    factoryClassName=cacheProps.getProperty(propertyName);
    if (debug)     debugPrintln("found " + factoryClassName + " in $java.home/jaxp.properties");
    if (factoryClassName != null) {
      sf=createInstance(factoryClassName);
      if (sf != null) {
        return sf;
      }
    }
  }
 catch (  Exception ex) {
    if (debug) {
      ex.printStackTrace();
    }
  }
  for (  URL resource : createServiceFileIterator()) {
    if (debug)     debugPrintln("looking into " + resource);
    try {
      sf=loadFromServicesFile(schemaLanguage,resource.toExternalForm(),resource.openStream());
      if (sf != null)       return sf;
    }
 catch (    IOException e) {
      if (debug) {
        debugPrintln("failed to read " + resource);
        e.printStackTrace();
      }
    }
  }
  if (schemaLanguage.equals(XMLConstants.W3C_XML_SCHEMA_NS_URI) || schemaLanguage.equals(W3C_XML_SCHEMA10_NS_URI)) {
    if (debug)     debugPrintln("attempting to use the platform default XML Schema 1.0 validator");
    return createInstance("org.apache.xerces.jaxp.validation.XMLSchemaFactory");
  }
 else   if (schemaLanguage.equals(W3C_XML_SCHEMA11_NS_URI)) {
    if (debug)     debugPrintln("attempting to use the platform default XML Schema 1.1 validator");
    return createInstance("org.apache.xerces.jaxp.validation.XMLSchema11Factory");
  }
  if (debug)   debugPrintln("all things were tried, but none was found. bailing out.");
  return null;
}
