{
  if (transaction == null)   throw new NullPointerException("Null transaction!");
  if (!sipStack.isAlive())   throw new SipException("Stack is stopped.");
  if (isAutomaticDialogSupportEnabled())   throw new SipException(" Error - AUTOMATIC_DIALOG_SUPPORT is on");
  if (!sipStack.isDialogCreated(transaction.getRequest().getMethod()))   throw new SipException("Dialog cannot be created for this method " + transaction.getRequest().getMethod());
  SIPDialog dialog=null;
  SIPTransaction sipTransaction=(SIPTransaction)transaction;
  if (transaction instanceof ServerTransaction) {
    SIPServerTransaction st=(SIPServerTransaction)transaction;
    Response response=st.getLastResponse();
    if (response != null) {
      if (response.getStatusCode() != 100)       throw new SipException("Cannot set dialog after response has been sent");
    }
    SIPRequest sipRequest=(SIPRequest)transaction.getRequest();
    String dialogId=sipRequest.getDialogId(true);
    dialog=sipStack.getDialog(dialogId);
    if (dialog == null) {
      dialog=sipStack.createDialog((SIPTransaction)transaction);
      dialog.addTransaction(sipTransaction);
      dialog.addRoute(sipRequest);
      sipTransaction.setDialog(dialog,null);
    }
 else {
      sipTransaction.setDialog(dialog,sipRequest.getDialogId(true));
    }
    if (sipRequest.getMethod().equals(Request.INVITE) && this.isDialogErrorsAutomaticallyHandled()) {
      sipStack.putInMergeTable(st,sipRequest);
    }
  }
 else {
    SIPClientTransaction sipClientTx=(SIPClientTransaction)transaction;
    SIPResponse response=sipClientTx.getLastResponse();
    if (response == null) {
      SIPRequest request=(SIPRequest)sipClientTx.getRequest();
      String dialogId=request.getDialogId(false);
      dialog=sipStack.getDialog(dialogId);
      if (dialog != null) {
        throw new SipException("Dialog already exists!");
      }
 else {
        dialog=sipStack.createDialog(sipTransaction);
      }
      sipClientTx.setDialog(dialog,null);
    }
 else {
      throw new SipException("Cannot call this method after response is received!");
    }
  }
  dialog.addEventListener(this);
  return dialog;
}
