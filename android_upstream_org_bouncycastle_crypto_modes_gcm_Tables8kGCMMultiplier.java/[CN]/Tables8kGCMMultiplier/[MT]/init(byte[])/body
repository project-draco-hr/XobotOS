{
  M[0][0]=new int[4];
  M[1][0]=new int[4];
  M[1][8]=GCMUtil.asInts(H);
  for (int j=4; j >= 1; j>>=1) {
    int[] tmp=new int[4];
    System.arraycopy(M[1][j + j],0,tmp,0,4);
    GCMUtil.multiplyP(tmp);
    M[1][j]=tmp;
  }
{
    int[] tmp=new int[4];
    System.arraycopy(M[1][1],0,tmp,0,4);
    GCMUtil.multiplyP(tmp);
    M[0][8]=tmp;
  }
  for (int j=4; j >= 1; j>>=1) {
    int[] tmp=new int[4];
    System.arraycopy(M[0][j + j],0,tmp,0,4);
    GCMUtil.multiplyP(tmp);
    M[0][j]=tmp;
  }
  int i=0;
  for (; ; ) {
    for (int j=2; j < 16; j+=j) {
      for (int k=1; k < j; ++k) {
        int[] tmp=new int[4];
        System.arraycopy(M[i][j],0,tmp,0,4);
        GCMUtil.xor(tmp,M[i][k]);
        M[i][j + k]=tmp;
      }
    }
    if (++i == 32) {
      return;
    }
    if (i > 1) {
      M[i][0]=new int[4];
      for (int j=8; j > 0; j>>=1) {
        int[] tmp=new int[4];
        System.arraycopy(M[i - 2][j],0,tmp,0,4);
        GCMUtil.multiplyP8(tmp);
        M[i][j]=tmp;
      }
    }
  }
}
