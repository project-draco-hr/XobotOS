{
  final byte[] rhsBytes;
  if (other instanceof CollationKeyICU) {
    rhsBytes=((CollationKeyICU)other).bytes;
  }
 else {
    rhsBytes=other.toByteArray();
  }
  if (bytes == null || bytes.length == 0) {
    if (rhsBytes == null || rhsBytes.length == 0) {
      return 0;
    }
    return -1;
  }
 else {
    if (rhsBytes == null || rhsBytes.length == 0) {
      return 1;
    }
  }
  int count=Math.min(bytes.length,rhsBytes.length);
  for (int i=0; i < count; ++i) {
    int s=bytes[i] & 0xff;
    int t=rhsBytes[i] & 0xff;
    if (s < t) {
      return -1;
    }
    if (s > t) {
      return 1;
    }
  }
  if (bytes.length < rhsBytes.length) {
    return -1;
  }
  if (bytes.length > rhsBytes.length) {
    return 1;
  }
  return 0;
}
