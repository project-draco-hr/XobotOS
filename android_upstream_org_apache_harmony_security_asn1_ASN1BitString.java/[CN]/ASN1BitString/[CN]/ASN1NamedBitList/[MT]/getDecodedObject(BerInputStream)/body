{
  boolean[] value;
  int unusedBits=in.buffer[in.contentOffset];
  int bitsNumber=(in.length - 1) * 8 - unusedBits;
  if (maxBits == INDEFINITE_SIZE) {
    if (minBits == INDEFINITE_SIZE) {
      value=new boolean[bitsNumber];
    }
 else {
      if (bitsNumber > minBits) {
        value=new boolean[bitsNumber];
      }
 else {
        value=new boolean[minBits];
      }
    }
  }
 else {
    if (bitsNumber > maxBits) {
      throw new ASN1Exception("ASN.1 Named Bitstring: size constraints");
    }
    value=new boolean[maxBits];
  }
  if (bitsNumber == 0) {
    return value;
  }
  int i=1;
  int j=0;
  byte octet=in.buffer[in.contentOffset + i];
  for (int size=in.length - 1; i < size; i++) {
    for (int k=0; k < 8; k++, j++) {
      value[j]=(SET_MASK[k] & octet) != 0;
    }
    i++;
    octet=in.buffer[in.contentOffset + i];
  }
  for (int k=0; k < (8 - unusedBits); k++, j++) {
    value[j]=(SET_MASK[k] & octet) != 0;
  }
  return value;
}
