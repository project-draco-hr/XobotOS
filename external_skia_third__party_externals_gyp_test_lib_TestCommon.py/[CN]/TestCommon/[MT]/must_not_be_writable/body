def must_not_be_writable(self, *files):
    'Ensures that the specified file(s) exist and are not writable.\n        An individual file can be specified as a list of directory names,\n        in which case the pathname will be constructed by concatenating\n        them.  Exits FAILED if any of the files does not exist or is\n        writable.\n        '
    files = map((lambda x: ((is_List(x) and apply(os.path.join, x)) or x)), files)
    (existing, missing) = separate_files(files)
    writable = filter(is_writable, existing)
    if missing:
        print ("Missing files: `%s'" % string.join(missing, "', `"))
    if writable:
        print ("Writable files: `%s'" % string.join(writable, "', `"))
    self.fail_test((missing + writable))
