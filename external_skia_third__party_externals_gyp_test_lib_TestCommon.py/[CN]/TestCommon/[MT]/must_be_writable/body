def must_be_writable(self, *files):
    'Ensures that the specified file(s) exist and are writable.\n        An individual file can be specified as a list of directory names,\n        in which case the pathname will be constructed by concatenating\n        them.  Exits FAILED if any of the files does not exist or is\n        not writable.\n        '
    files = map((lambda x: ((is_List(x) and apply(os.path.join, x)) or x)), files)
    (existing, missing) = separate_files(files)
    unwritable = filter((lambda x, iw=is_writable: (not iw(x))), existing)
    if missing:
        print ("Missing files: `%s'" % string.join(missing, "', `"))
    if unwritable:
        print ("Unwritable files: `%s'" % string.join(unwritable, "', `"))
    self.fail_test((missing + unwritable))
