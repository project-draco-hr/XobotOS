{
  put("KeyAgreement.ECDH","org.bouncycastle.jce.provider.asymmetric.ec.KeyAgreement$DH");
  put("KeyFactory.EC","org.bouncycastle.jce.provider.asymmetric.ec.KeyFactory$EC");
  put("Alg.Alias.KeyFactory." + X9ObjectIdentifiers.id_ecPublicKey,"EC");
  put("Alg.Alias.KeyFactory." + X9ObjectIdentifiers.dhSinglePass_stdDH_sha1kdf_scheme,"EC");
  put("KeyPairGenerator.EC","org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC");
  put("Alg.Alias.KeyPairGenerator." + X9ObjectIdentifiers.dhSinglePass_stdDH_sha1kdf_scheme,"EC");
  put("Signature.ECDSA","org.bouncycastle.jce.provider.asymmetric.ec.Signature$ecDSA");
  put("Signature.NONEwithECDSA","org.bouncycastle.jce.provider.asymmetric.ec.Signature$ecDSAnone");
  put("Alg.Alias.Signature.SHA1withECDSA","ECDSA");
  put("Alg.Alias.Signature.ECDSAwithSHA1","ECDSA");
  put("Alg.Alias.Signature.SHA1WITHECDSA","ECDSA");
  put("Alg.Alias.Signature.ECDSAWITHSHA1","ECDSA");
  put("Alg.Alias.Signature.SHA1WithECDSA","ECDSA");
  put("Alg.Alias.Signature.ECDSAWithSHA1","ECDSA");
  put("Alg.Alias.Signature.1.2.840.10045.4.1","ECDSA");
  addSignatureAlgorithm("SHA256","ECDSA","org.bouncycastle.jce.provider.asymmetric.ec.Signature$ecDSA256",X9ObjectIdentifiers.ecdsa_with_SHA256);
  addSignatureAlgorithm("SHA384","ECDSA","org.bouncycastle.jce.provider.asymmetric.ec.Signature$ecDSA384",X9ObjectIdentifiers.ecdsa_with_SHA384);
  addSignatureAlgorithm("SHA512","ECDSA","org.bouncycastle.jce.provider.asymmetric.ec.Signature$ecDSA512",X9ObjectIdentifiers.ecdsa_with_SHA512);
}
