def AddOrGetProjectReference(self, other_pbxproject):
    'Add a reference to another project file (via PBXProject object) to this\n    one.\n\n    Returns [ProductGroup, ProjectRef].  ProductGroup is a PBXGroup object in\n    this project file that contains a PBXReferenceProxy object for each\n    product of each PBXNativeTarget in the other project file.  ProjectRef is\n    a PBXFileReference to the other project file.\n\n    If this project file already references the other project file, the\n    existing ProductGroup and ProjectRef are returned.  The ProductGroup will\n    still be updated if necessary.\n    '
    if (not ('projectReferences' in self._properties)):
        self._properties['projectReferences'] = []
    product_group = None
    project_ref = None
    if (not (other_pbxproject in self._other_pbxprojects)):
        product_group = PBXGroup({'name': 'Products', })
        product_group.parent = self
        product_group._hashables.extend(other_pbxproject.Hashables())
        this_path = posixpath.dirname(self.Path())
        projectDirPath = self.GetProperty('projectDirPath')
        if projectDirPath:
            if posixpath.isabs(projectDirPath[0]):
                this_path = projectDirPath
            else:
                this_path = posixpath.join(this_path, projectDirPath)
        other_path = gyp.common.RelativePath(other_pbxproject.Path(), this_path)
        project_ref = PBXFileReference({'lastKnownFileType': 'wrapper.pb-project', 'path': other_path, 'sourceTree': 'SOURCE_ROOT', })
        self.ProjectsGroup().AppendChild(project_ref)
        ref_dict = {'ProductGroup': product_group, 'ProjectRef': project_ref, }
        self._other_pbxprojects[other_pbxproject] = ref_dict
        self.AppendProperty('projectReferences', ref_dict)
        self._properties['projectReferences'] = sorted(self._properties['projectReferences'], cmp=(lambda x, y: cmp(x['ProjectRef'].Name().lower(), y['ProjectRef'].Name().lower())))
    else:
        project_ref_dict = self._other_pbxprojects[other_pbxproject]
        product_group = project_ref_dict['ProductGroup']
        project_ref = project_ref_dict['ProjectRef']
    self._SetUpProductReferences(other_pbxproject, product_group, project_ref)
    return [product_group, project_ref]
