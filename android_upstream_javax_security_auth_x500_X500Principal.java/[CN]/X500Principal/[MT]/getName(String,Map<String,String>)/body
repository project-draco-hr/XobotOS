{
  String rfc1779Name=dn.getName(RFC1779);
  String rfc2253Name=dn.getName(RFC2253);
  if (format.equalsIgnoreCase("RFC1779")) {
    StringBuilder resultName=new StringBuilder(rfc1779Name);
    int fromIndex=resultName.length();
    int equalIndex=-1;
    while (-1 != (equalIndex=resultName.lastIndexOf("=",fromIndex))) {
      int commaIndex=resultName.lastIndexOf(",",equalIndex);
      String subName=resultName.substring(commaIndex + 1,equalIndex).trim();
      if (subName.length() > 4 && subName.substring(0,4).equals("OID.")) {
        String subSubName=subName.substring(4);
        if (oidMap.containsKey(subSubName)) {
          String replaceName=oidMap.get(subSubName);
          if (commaIndex > 0)           replaceName=" " + replaceName;
          resultName.replace(commaIndex + 1,equalIndex,replaceName);
        }
      }
      fromIndex=commaIndex;
    }
    return resultName.toString();
  }
 else   if (format.equalsIgnoreCase("RFC2253")) {
    StringBuilder resultName=new StringBuilder(rfc2253Name);
    StringBuilder subsidyName=new StringBuilder(rfc1779Name);
    int fromIndex=resultName.length();
    int subsidyFromIndex=subsidyName.length();
    int equalIndex=-1;
    int subsidyEqualIndex=-1;
    while (-1 != (equalIndex=resultName.lastIndexOf("=",fromIndex))) {
      subsidyEqualIndex=subsidyName.lastIndexOf("=",subsidyFromIndex);
      int commaIndex=resultName.lastIndexOf(",",equalIndex);
      String subName=resultName.substring(commaIndex + 1,equalIndex).trim();
      if (oidMap.containsKey(subName)) {
        int subOrignalEndIndex=resultName.indexOf(",",equalIndex);
        if (subOrignalEndIndex == -1)         subOrignalEndIndex=resultName.length();
        int subGoalEndIndex=subsidyName.indexOf(",",subsidyEqualIndex);
        if (subGoalEndIndex == -1)         subGoalEndIndex=subsidyName.length();
        resultName.replace(equalIndex + 1,subOrignalEndIndex,subsidyName.substring(subsidyEqualIndex + 1,subGoalEndIndex));
        resultName.replace(commaIndex + 1,equalIndex,oidMap.get(subName));
      }
      fromIndex=commaIndex;
      subsidyFromIndex=subsidyEqualIndex - 1;
    }
    return resultName.toString();
  }
 else {
    throw new IllegalArgumentException("invalid format specified: " + format);
  }
}
