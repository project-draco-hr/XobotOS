{
  if (!(params instanceof PKIXBuilderParameters) && !(params instanceof ExtendedPKIXBuilderParameters)) {
    throw new InvalidAlgorithmParameterException("Parameters must be an instance of " + PKIXBuilderParameters.class.getName() + " or "+ ExtendedPKIXBuilderParameters.class.getName()+ ".");
  }
  ExtendedPKIXBuilderParameters pkixParams=null;
  if (params instanceof ExtendedPKIXBuilderParameters) {
    pkixParams=(ExtendedPKIXBuilderParameters)params;
  }
 else {
    pkixParams=(ExtendedPKIXBuilderParameters)ExtendedPKIXBuilderParameters.getInstance((PKIXBuilderParameters)params);
  }
  Collection targets;
  Iterator targetIter;
  List certPathList=new ArrayList();
  X509Certificate cert;
  Selector certSelect=pkixParams.getTargetConstraints();
  if (!(certSelect instanceof X509CertStoreSelector)) {
    throw new CertPathBuilderException("TargetConstraints must be an instance of " + X509CertStoreSelector.class.getName() + " for "+ this.getClass().getName()+ " class.");
  }
  try {
    targets=CertPathValidatorUtilities.findCertificates((X509CertStoreSelector)certSelect,pkixParams.getStores());
    targets.addAll(CertPathValidatorUtilities.findCertificates((X509CertStoreSelector)certSelect,pkixParams.getCertStores()));
  }
 catch (  AnnotatedException e) {
    throw new ExtCertPathBuilderException("Error finding target certificate.",e);
  }
  if (targets.isEmpty()) {
    throw new CertPathBuilderException("No certificate found matching targetContraints.");
  }
  CertPathBuilderResult result=null;
  targetIter=targets.iterator();
  while (targetIter.hasNext() && result == null) {
    cert=(X509Certificate)targetIter.next();
    result=build(cert,pkixParams,certPathList);
  }
  if (result == null && certPathException != null) {
    if (certPathException instanceof AnnotatedException) {
      throw new CertPathBuilderException(certPathException.getMessage(),certPathException.getCause());
    }
    throw new CertPathBuilderException("Possible certificate chain could not be validated.",certPathException);
  }
  if (result == null && certPathException == null) {
    throw new CertPathBuilderException("Unable to find certificate chain.");
  }
  return result;
}
