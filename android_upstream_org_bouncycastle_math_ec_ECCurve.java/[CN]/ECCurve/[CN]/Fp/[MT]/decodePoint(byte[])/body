{
  ECPoint p=null;
switch (encoded[0]) {
case 0x00:
    if (encoded.length > 1) {
      throw new RuntimeException("Invalid point encoding");
    }
  p=getInfinity();
break;
case 0x02:
case 0x03:
int ytilde=encoded[0] & 1;
byte[] i=new byte[encoded.length - 1];
System.arraycopy(encoded,1,i,0,i.length);
ECFieldElement x=new ECFieldElement.Fp(this.q,new BigInteger(1,i));
ECFieldElement alpha=x.multiply(x.square().add(a)).add(b);
ECFieldElement beta=alpha.sqrt();
if (beta == null) {
throw new RuntimeException("Invalid point compression");
}
int bit0=(beta.toBigInteger().testBit(0) ? 1 : 0);
if (bit0 == ytilde) {
p=new ECPoint.Fp(this,x,beta,true);
}
 else {
p=new ECPoint.Fp(this,x,new ECFieldElement.Fp(this.q,q.subtract(beta.toBigInteger())),true);
}
break;
case 0x04:
case 0x06:
case 0x07:
byte[] xEnc=new byte[(encoded.length - 1) / 2];
byte[] yEnc=new byte[(encoded.length - 1) / 2];
System.arraycopy(encoded,1,xEnc,0,xEnc.length);
System.arraycopy(encoded,xEnc.length + 1,yEnc,0,yEnc.length);
p=new ECPoint.Fp(this,new ECFieldElement.Fp(this.q,new BigInteger(1,xEnc)),new ECFieldElement.Fp(this.q,new BigInteger(1,yEnc)));
break;
default :
throw new RuntimeException("Invalid point encoding 0x" + Integer.toString(encoded[0],16));
}
return p;
}
