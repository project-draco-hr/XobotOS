{
  WNafPreCompInfo wnafPreCompInfo;
  if ((preCompInfo != null) && (preCompInfo instanceof WNafPreCompInfo)) {
    wnafPreCompInfo=(WNafPreCompInfo)preCompInfo;
  }
 else {
    wnafPreCompInfo=new WNafPreCompInfo();
  }
  int m=k.bitLength();
  byte width;
  int reqPreCompLen;
  if (m < 13) {
    width=2;
    reqPreCompLen=1;
  }
 else {
    if (m < 41) {
      width=3;
      reqPreCompLen=2;
    }
 else {
      if (m < 121) {
        width=4;
        reqPreCompLen=4;
      }
 else {
        if (m < 337) {
          width=5;
          reqPreCompLen=8;
        }
 else {
          if (m < 897) {
            width=6;
            reqPreCompLen=16;
          }
 else {
            if (m < 2305) {
              width=7;
              reqPreCompLen=32;
            }
 else {
              width=8;
              reqPreCompLen=127;
            }
          }
        }
      }
    }
  }
  int preCompLen=1;
  ECPoint[] preComp=wnafPreCompInfo.getPreComp();
  ECPoint twiceP=wnafPreCompInfo.getTwiceP();
  if (preComp == null) {
    preComp=new ECPoint[]{p};
  }
 else {
    preCompLen=preComp.length;
  }
  if (twiceP == null) {
    twiceP=p.twice();
  }
  if (preCompLen < reqPreCompLen) {
    ECPoint[] oldPreComp=preComp;
    preComp=new ECPoint[reqPreCompLen];
    System.arraycopy(oldPreComp,0,preComp,0,preCompLen);
    for (int i=preCompLen; i < reqPreCompLen; i++) {
      preComp[i]=twiceP.add(preComp[i - 1]);
    }
  }
  byte[] wnaf=windowNaf(width,k);
  int l=wnaf.length;
  ECPoint q=p.getCurve().getInfinity();
  for (int i=l - 1; i >= 0; i--) {
    q=q.twice();
    if (wnaf[i] != 0) {
      if (wnaf[i] > 0) {
        q=q.add(preComp[(wnaf[i] - 1) / 2]);
      }
 else {
        q=q.subtract(preComp[(-wnaf[i] - 1) / 2]);
      }
    }
  }
  wnafPreCompInfo.setPreComp(preComp);
  wnafPreCompInfo.setTwiceP(twiceP);
  p.setPreCompInfo(wnafPreCompInfo);
  return q;
}
