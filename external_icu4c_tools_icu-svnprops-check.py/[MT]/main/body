def main(argv):
    fix_problems = False
    try:
        (opts, args) = getopt.getopt(argv, 'fh', ('fix', 'help'))
    except getopt.GetoptError:
        print ('unrecognized option: ' + argv[0])
        usage()
        sys.exit(2)
    for (opt, arg) in opts:
        if (opt in ('-h', '--help')):
            usage()
            sys.exit()
        if (opt in ('-f', '--fix')):
            fix_problems = True
    if args:
        print 'unexpected command line argument'
        usage()
        sys.exit()
    parse_auto_props()
    output = runCommand('svn ls -R ')
    file_list = output.splitlines()
    for f in file_list:
        if os.path.isdir(f):
            continue
        if (not os.path.isfile(f)):
            print ('Repository file not in working copy: ' + f)
            continue
        for (file_pattern, props) in file_types:
            if re.match(file_pattern, f):
                for (propname, propval) in props:
                    actual_propval = runCommand(((('svn propget --strict ' + propname) + ' ') + f))
                    if ((propname == 'svn:mime-type') and (propval.find('text/') == 0)):
                        propval = check_utf8(f, propval, actual_propval)
                    if (not ((propval == actual_propval) or ((propval == '') and (actual_propval == '*')))):
                        print ("svn propset %s '%s' %s" % (propname, propval, f))
                        if fix_problems:
                            os.system(("svn propset %s '%s' %s" % (propname, propval, f)))
                    if ((propname == 'svn:eol-style') and (propval == 'native')):
                        if os.system(('grep -q -v \r ' + f)):
                            if fix_problems:
                                print (f + ': Removing DOS CR characters.')
                                os.system(('sed -i s/\r// ' + f))
                            else:
                                print (f + ' contains DOS CR characters.')
