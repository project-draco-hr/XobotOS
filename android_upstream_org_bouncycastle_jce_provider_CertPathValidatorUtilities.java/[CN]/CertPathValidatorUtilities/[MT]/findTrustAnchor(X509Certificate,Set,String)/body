{
  TrustAnchor trust=null;
  PublicKey trustPublicKey=null;
  Exception invalidKeyEx=null;
  X509CertSelector certSelectX509=new X509CertSelector();
  X500Principal certIssuer=getEncodedIssuerPrincipal(cert);
  try {
    certSelectX509.setSubject(certIssuer.getEncoded());
  }
 catch (  IOException ex) {
    throw new AnnotatedException("Cannot set subject search criteria for trust anchor.",ex);
  }
  Iterator iter=trustAnchors.iterator();
  while (iter.hasNext() && trust == null) {
    trust=(TrustAnchor)iter.next();
    if (trust.getTrustedCert() != null) {
      if (certSelectX509.match(trust.getTrustedCert())) {
        trustPublicKey=trust.getTrustedCert().getPublicKey();
      }
 else {
        trust=null;
      }
    }
 else     if (trust.getCAName() != null && trust.getCAPublicKey() != null) {
      try {
        X500Principal caName=new X500Principal(trust.getCAName());
        if (certIssuer.equals(caName)) {
          trustPublicKey=trust.getCAPublicKey();
        }
 else {
          trust=null;
        }
      }
 catch (      IllegalArgumentException ex) {
        trust=null;
      }
    }
 else {
      trust=null;
    }
    if (trustPublicKey != null) {
      try {
        verifyX509Certificate(cert,trustPublicKey,sigProvider);
      }
 catch (      Exception ex) {
        invalidKeyEx=ex;
        trust=null;
      }
    }
  }
  if (trust == null && invalidKeyEx != null) {
    throw new AnnotatedException("TrustAnchor found but certificate validation failed.",invalidKeyEx);
  }
  return trust;
}
