{
  X509CRLObject bcCRL=null;
  try {
    bcCRL=new X509CRLObject(new CertificateList((ASN1Sequence)ASN1Sequence.fromByteArray(crl.getEncoded())));
  }
 catch (  Exception exception) {
    throw new AnnotatedException("Bouncy Castle X509CRLObject could not be created.",exception);
  }
  X509CRLEntryObject crl_entry=(X509CRLEntryObject)bcCRL.getRevokedCertificate(getSerialNumber(cert));
  if (crl_entry != null && (getEncodedIssuerPrincipal(cert).equals(crl_entry.getCertificateIssuer()) || getEncodedIssuerPrincipal(cert).equals(getIssuerPrincipal(crl)))) {
    DEREnumerated reasonCode=null;
    if (crl_entry.hasExtensions()) {
      try {
        reasonCode=DEREnumerated.getInstance(CertPathValidatorUtilities.getExtensionValue(crl_entry,X509Extensions.ReasonCode.getId()));
      }
 catch (      Exception e) {
        new AnnotatedException("Reason code CRL entry extension could not be decoded.",e);
      }
    }
    if (!(validDate.getTime() < crl_entry.getRevocationDate().getTime()) || reasonCode == null || reasonCode.getValue().intValue() == 0 || reasonCode.getValue().intValue() == 1 || reasonCode.getValue().intValue() == 2 || reasonCode.getValue().intValue() == 8) {
      if (reasonCode != null) {
        certStatus.setCertStatus(reasonCode.getValue().intValue());
      }
 else {
        certStatus.setCertStatus(CRLReason.unspecified);
      }
      certStatus.setRevocationDate(crl_entry.getRevocationDate());
    }
  }
}
