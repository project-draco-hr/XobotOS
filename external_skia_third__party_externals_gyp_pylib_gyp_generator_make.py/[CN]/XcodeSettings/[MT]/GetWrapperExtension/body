def GetWrapperExtension(self):
    'Returns the bundle extension (.app, .framework, .plugin, etc).  Only\n    valid for bundles.'
    assert self._IsBundle()
    if (self.spec['type'] in ('loadable_module', 'shared_library')):
        default_wrapper_extension = {'loadable_module': 'bundle', 'shared_library': 'framework', }[self.spec['type']]
        wrapper_extension = self.GetPerTargetSetting('WRAPPER_EXTENSION', default=default_wrapper_extension)
        return ('.' + self.spec.get('product_extension', wrapper_extension))
    elif (self.spec['type'] == 'executable'):
        return '.app'
    else:
        assert False, ("Don't know extension for '%s', target '%s'" % (self.spec['type'], self.spec['target_name']))
