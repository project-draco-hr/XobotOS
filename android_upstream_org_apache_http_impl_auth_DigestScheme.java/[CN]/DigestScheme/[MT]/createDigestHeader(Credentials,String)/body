{
  CharArrayBuffer buffer=new CharArrayBuffer(128);
  if (isProxy()) {
    buffer.append(AUTH.PROXY_AUTH_RESP);
  }
 else {
    buffer.append(AUTH.WWW_AUTH_RESP);
  }
  buffer.append(": Digest ");
  String uri=getParameter("uri");
  String realm=getParameter("realm");
  String nonce=getParameter("nonce");
  String opaque=getParameter("opaque");
  String response=digest;
  String algorithm=getParameter("algorithm");
  String uname=credentials.getUserPrincipal().getName();
  List<BasicNameValuePair> params=new ArrayList<BasicNameValuePair>(20);
  params.add(new BasicNameValuePair("username",uname));
  params.add(new BasicNameValuePair("realm",realm));
  params.add(new BasicNameValuePair("nonce",nonce));
  params.add(new BasicNameValuePair("uri",uri));
  params.add(new BasicNameValuePair("response",response));
  if (qopVariant != QOP_MISSING) {
    params.add(new BasicNameValuePair("qop",getQopVariantString()));
    params.add(new BasicNameValuePair("nc",NC));
    params.add(new BasicNameValuePair("cnonce",getCnonce()));
  }
  if (algorithm != null) {
    params.add(new BasicNameValuePair("algorithm",algorithm));
  }
  if (opaque != null) {
    params.add(new BasicNameValuePair("opaque",opaque));
  }
  for (int i=0; i < params.size(); i++) {
    BasicNameValuePair param=params.get(i);
    if (i > 0) {
      buffer.append(", ");
    }
    boolean noQuotes="nc".equals(param.getName()) || "qop".equals(param.getName());
    BasicHeaderValueFormatter.DEFAULT.formatNameValuePair(buffer,param,!noQuotes);
  }
  return new BufferedHeader(buffer);
}
