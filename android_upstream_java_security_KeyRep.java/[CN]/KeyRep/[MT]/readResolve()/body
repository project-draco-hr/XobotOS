{
switch (type) {
case SECRET:
    if ("RAW".equals(format)) {
      try {
        return new SecretKeySpec(encoded,algorithm);
      }
 catch (      IllegalArgumentException e) {
        throw new NotSerializableException("Could not create SecretKeySpec: " + e);
      }
    }
  throw new NotSerializableException("unrecognized type/format combination: " + type + "/"+ format);
case PUBLIC:
if ("X.509".equals(format)) {
  try {
    KeyFactory kf=KeyFactory.getInstance(algorithm);
    return kf.generatePublic(new X509EncodedKeySpec(encoded));
  }
 catch (  NoSuchAlgorithmException e) {
    throw new NotSerializableException("Could not resolve key: " + e);
  }
catch (  InvalidKeySpecException e) {
    throw new NotSerializableException("Could not resolve key: " + e);
  }
}
throw new NotSerializableException("unrecognized type/format combination: " + type + "/"+ format);
case PRIVATE:
if ("PKCS#8".equals(format)) {
try {
KeyFactory kf=KeyFactory.getInstance(algorithm);
return kf.generatePrivate(new PKCS8EncodedKeySpec(encoded));
}
 catch (NoSuchAlgorithmException e) {
throw new NotSerializableException("Could not resolve key: " + e);
}
catch (InvalidKeySpecException e) {
throw new NotSerializableException("Could not resolve key: " + e);
}
}
throw new NotSerializableException("unrecognized type/format combination: " + type + "/"+ format);
}
throw new NotSerializableException("unrecognized key type: " + type);
}
