def _GetMSVSConfigurationType(spec, build_file):
    "Returns the configuration type for this project.\n\n  It's a number defined by Microsoft.  May raise an exception.\n\n  Args:\n      spec: The target dictionary containing the properties of the target.\n      build_file: The path of the gyp file.\n  Returns:\n      An integer, the configuration type.\n  "
    try:
        config_type = {'executable': '1', 'shared_library': '2', 'loadable_module': '2', 'static_library': '4', 'none': '10', 'dummy_executable': '1', }[spec['type']]
    except KeyError:
        if spec.get('type'):
            raise Exception(('Target type %s is not a valid target type for target %s in %s.' % (spec['type'], spec['target_name'], build_file)))
        else:
            raise Exception(('Missing type field for target %s in %s.' % (spec['target_name'], build_file)))
    return config_type
