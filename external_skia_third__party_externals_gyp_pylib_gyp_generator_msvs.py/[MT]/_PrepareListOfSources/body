def _PrepareListOfSources(spec, gyp_file):
    'Prepare list of sources and excluded sources.\n\n  Besides the sources specified directly in the spec, adds the gyp file so\n  that a change to it will cause a re-compile. Also adds appropriate sources\n  for actions and copies. Assumes later stage will un-exclude files which\n  have custom build steps attached.\n\n  Arguments:\n    spec: The target dictionary containing the properties of the target.\n    gyp_file: The name of the gyp file.\n  Returns:\n    A pair of (list of sources, list of excluded sources).\n    The sources will be relative to the gyp file.\n  '
    sources = set()
    _AddNormalizedSources(sources, spec.get('sources', []))
    excluded_sources = set()
    sources.add(gyp_file)
    for a in spec.get('actions', []):
        inputs = a.get('inputs', [])
        inputs = [_NormalizedSource(i) for i in inputs]
        inputs = set(inputs)
        sources.update(inputs)
        excluded_sources.update(inputs)
        if int(a.get('process_outputs_as_sources', False)):
            _AddNormalizedSources(sources, a.get('outputs', []))
    for cpy in spec.get('copies', []):
        _AddNormalizedSources(sources, cpy.get('files', []))
    return (sources, excluded_sources)
