def _BuildCommandLineForRuleRaw(spec, cmd, cygwin_shell, has_input_path, quote_cmd):
    if cygwin_shell:
        cygwin_dir = _FixPath(spec.get('msvs_cygwin_dirs', ['.'])[0])
        direct_cmd = cmd
        direct_cmd = [i.replace('$(IntDir)', '`cygpath -m "${INTDIR}"`') for i in direct_cmd]
        direct_cmd = [i.replace('$(OutDir)', '`cygpath -m "${OUTDIR}"`') for i in direct_cmd]
        if has_input_path:
            direct_cmd = [i.replace('$(InputPath)', '`cygpath -m "${INPUTPATH}"`') for i in direct_cmd]
        direct_cmd = [('"%s"' % i) for i in direct_cmd]
        direct_cmd = [i.replace('"', '\\"') for i in direct_cmd]
        direct_cmd = ' '.join(direct_cmd)
        cmd = 'call "$(ProjectDir)%(cygwin_dir)s\\setup_env.bat" && set CYGWIN=nontsec&& '
        if (direct_cmd.find('NUMBER_OF_PROCESSORS') >= 0):
            cmd += 'set /a NUMBER_OF_PROCESSORS_PLUS_1=%%NUMBER_OF_PROCESSORS%%+1&& '
        if (direct_cmd.find('INTDIR') >= 0):
            cmd += 'set INTDIR=$(IntDir)&& '
        if (direct_cmd.find('OUTDIR') >= 0):
            cmd += 'set OUTDIR=$(OutDir)&& '
        if (has_input_path and (direct_cmd.find('INPUTPATH') >= 0)):
            cmd += 'set INPUTPATH=$(InputPath) && '
        cmd += 'bash -c "%(cmd)s"'
        cmd = (cmd % {'cygwin_dir': cygwin_dir, 'cmd': direct_cmd, })
        return cmd
    else:
        if (cmd[0] == 'cat'):
            command = ['type']
        else:
            command = [cmd[0].replace('/', '\\')]
        arguments = [((i.startswith('/') and i) or _FixPath(i)) for i in cmd[1:]]
        if quote_cmd:
            arguments = [('"%s"' % i) for i in arguments]
        return ' '.join((command + arguments))
