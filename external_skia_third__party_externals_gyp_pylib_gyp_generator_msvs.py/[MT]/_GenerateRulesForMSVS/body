def _GenerateRulesForMSVS(p, output_dir, options, spec, sources, excluded_sources, actions_to_add):
    'Generate all the rules for a particular project.\n\n  Arguments:\n    p: the project\n    output_dir: directory to emit rules to\n    options: global options passed to the generator\n    spec: the specification for this project\n    sources: the set of all known source files in this project\n    excluded_sources: the set of sources excluded from normal processing\n    actions_to_add: deferred list of actions to add in\n  '
    rules = spec.get('rules', [])
    rules_native = [r for r in rules if (not int(r.get('msvs_external_rule', 0)))]
    rules_external = [r for r in rules if int(r.get('msvs_external_rule', 0))]
    if rules_native:
        _GenerateNativeRulesForMSVS(p, rules_native, output_dir, spec, options)
    if rules_external:
        _GenerateExternalRules(rules_external, output_dir, spec, sources, options, actions_to_add)
    _AdjustSourcesForRules(rules, sources, excluded_sources)
