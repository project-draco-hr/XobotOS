{
  Field field=null;
  Class fieldClass=null;
  Class caller=null;
  int modifiers=0;
  try {
    field=tclass.getDeclaredField(fieldName);
    caller=VMStack.getStackClass2();
    modifiers=field.getModifiers();
    fieldClass=field.getType();
  }
 catch (  Exception ex) {
    throw new RuntimeException(ex);
  }
  if (vclass != fieldClass)   throw new ClassCastException();
  if (!Modifier.isVolatile(modifiers))   throw new IllegalArgumentException("Must be volatile type");
  this.cclass=(Modifier.isProtected(modifiers) && caller != tclass) ? caller : null;
  this.tclass=tclass;
  if (vclass == Object.class)   this.vclass=null;
 else   this.vclass=vclass;
  offset=unsafe.objectFieldOffset(field);
}
