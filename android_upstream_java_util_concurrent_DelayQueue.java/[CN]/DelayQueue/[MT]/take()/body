{
  final ReentrantLock lock=this.lock;
  lock.lockInterruptibly();
  try {
    for (; ; ) {
      E first=q.peek();
      if (first == null)       available.await();
 else {
        long delay=first.getDelay(TimeUnit.NANOSECONDS);
        if (delay <= 0)         return q.poll();
 else         if (leader != null)         available.await();
 else {
          Thread thisThread=Thread.currentThread();
          leader=thisThread;
          try {
            available.awaitNanos(delay);
          }
  finally {
            if (leader == thisThread)             leader=null;
          }
        }
      }
    }
  }
  finally {
    if (leader == null && q.peek() != null)     available.signal();
    lock.unlock();
  }
}
