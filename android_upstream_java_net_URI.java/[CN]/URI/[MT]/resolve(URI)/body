{
  if (relative.absolute || opaque) {
    return relative;
  }
  if (relative.authority != null) {
    URI result=relative.duplicate();
    result.scheme=scheme;
    result.absolute=absolute;
    return result;
  }
  if (relative.path.isEmpty() && relative.scheme == null && relative.query == null) {
    URI result=duplicate();
    result.fragment=relative.fragment;
    return result;
  }
  URI result=duplicate();
  result.fragment=relative.fragment;
  result.query=relative.query;
  String resolvedPath;
  if (relative.path.startsWith("/")) {
    resolvedPath=relative.path;
  }
 else   if (relative.path.isEmpty()) {
    resolvedPath=path;
  }
 else {
    int endIndex=path.lastIndexOf('/') + 1;
    resolvedPath=path.substring(0,endIndex) + relative.path;
  }
  result.path=UrlUtils.authoritySafePath(result.authority,normalize(resolvedPath,true));
  result.setSchemeSpecificPart();
  return result;
}
