{
  string=uri;
  int fragmentStart=UrlUtils.findFirstOf(uri,"#",0,uri.length());
  if (fragmentStart < uri.length()) {
    fragment=ALL_LEGAL_ENCODER.validate(uri,fragmentStart + 1,uri.length(),"fragment");
  }
  int start;
  int colon=UrlUtils.findFirstOf(uri,":",0,fragmentStart);
  if (colon < UrlUtils.findFirstOf(uri,"/?#",0,fragmentStart)) {
    absolute=true;
    scheme=validateScheme(uri,colon);
    start=colon + 1;
    if (start == fragmentStart) {
      throw new URISyntaxException(uri,"Scheme-specific part expected",start);
    }
    if (!uri.regionMatches(start,"/",0,1)) {
      opaque=true;
      schemeSpecificPart=ALL_LEGAL_ENCODER.validate(uri,start,fragmentStart,"scheme specific part");
      return;
    }
  }
 else {
    absolute=false;
    start=0;
  }
  opaque=false;
  schemeSpecificPart=uri.substring(start,fragmentStart);
  int fileStart;
  if (uri.regionMatches(start,"//",0,2)) {
    int authorityStart=start + 2;
    fileStart=UrlUtils.findFirstOf(uri,"/?",authorityStart,fragmentStart);
    if (authorityStart == uri.length()) {
      throw new URISyntaxException(uri,"Authority expected",uri.length());
    }
    if (authorityStart < fileStart) {
      authority=AUTHORITY_ENCODER.validate(uri,authorityStart,fileStart,"authority");
    }
  }
 else {
    fileStart=start;
  }
  int queryStart=UrlUtils.findFirstOf(uri,"?",fileStart,fragmentStart);
  path=PATH_ENCODER.validate(uri,fileStart,queryStart,"path");
  if (queryStart < fragmentStart) {
    query=ALL_LEGAL_ENCODER.validate(uri,queryStart + 1,fragmentStart,"query");
  }
  parseAuthority(forceServer);
}
