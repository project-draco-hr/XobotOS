{
  boolean quote=false;
  int next, last=-1, count=0, offset=position.getIndex();
  int length=string.length();
  calendar.clear();
  TimeZone zone=calendar.getTimeZone();
  final int patternLength=pattern.length();
  for (int i=0; i < patternLength; i++) {
    next=pattern.charAt(i);
    if (next == '\'') {
      if (count > 0) {
        if ((offset=parse(string,offset,(char)last,count)) < 0) {
          return error(position,-offset - 1,zone);
        }
        count=0;
      }
      if (last == next) {
        if (offset >= length || string.charAt(offset) != '\'') {
          return error(position,offset,zone);
        }
        offset++;
        last=-1;
      }
 else {
        last=next;
      }
      quote=!quote;
      continue;
    }
    if (!quote && (last == next || (next >= 'a' && next <= 'z') || (next >= 'A' && next <= 'Z'))) {
      if (last == next) {
        count++;
      }
 else {
        if (count > 0) {
          if ((offset=parse(string,offset,(char)last,-count)) < 0) {
            return error(position,-offset - 1,zone);
          }
        }
        last=next;
        count=1;
      }
    }
 else {
      if (count > 0) {
        if ((offset=parse(string,offset,(char)last,count)) < 0) {
          return error(position,-offset - 1,zone);
        }
        count=0;
      }
      last=-1;
      if (offset >= length || string.charAt(offset) != next) {
        return error(position,offset,zone);
      }
      offset++;
    }
  }
  if (count > 0) {
    if ((offset=parse(string,offset,(char)last,count)) < 0) {
      return error(position,-offset - 1,zone);
    }
  }
  Date date;
  try {
    date=calendar.getTime();
  }
 catch (  IllegalArgumentException e) {
    return error(position,offset,zone);
  }
  position.setIndex(offset);
  calendar.setTimeZone(zone);
  return date;
}
