{
  try {
    ASN1Sequence seq=readKeyPair(obj);
    if (seq.size() != 9) {
      throw new PEMException("malformed sequence in RSA private key");
    }
    DERInteger mod=(DERInteger)seq.getObjectAt(1);
    DERInteger pubExp=(DERInteger)seq.getObjectAt(2);
    DERInteger privExp=(DERInteger)seq.getObjectAt(3);
    DERInteger p1=(DERInteger)seq.getObjectAt(4);
    DERInteger p2=(DERInteger)seq.getObjectAt(5);
    DERInteger exp1=(DERInteger)seq.getObjectAt(6);
    DERInteger exp2=(DERInteger)seq.getObjectAt(7);
    DERInteger crtCoef=(DERInteger)seq.getObjectAt(8);
    RSAPublicKeySpec pubSpec=new RSAPublicKeySpec(mod.getValue(),pubExp.getValue());
    RSAPrivateCrtKeySpec privSpec=new RSAPrivateCrtKeySpec(mod.getValue(),pubExp.getValue(),privExp.getValue(),p1.getValue(),p2.getValue(),exp1.getValue(),exp2.getValue(),crtCoef.getValue());
    KeyFactory fact=KeyFactory.getInstance("RSA",provider);
    return new KeyPair(fact.generatePublic(pubSpec),fact.generatePrivate(privSpec));
  }
 catch (  IOException e) {
    throw e;
  }
catch (  Exception e) {
    throw new PEMException("problem creating RSA private key: " + e.toString(),e);
  }
}
