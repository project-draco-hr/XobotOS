{
  if (sipStack.isLoggingEnabled())   sipStack.getStackLogger().logDebug("SIPServerTransaction.fireTimeoutTimer this = " + this + " current state = "+ this.getRealState()+ " method = "+ this.getOriginalRequest().getMethod());
  if (this.getMethod().equals(Request.INVITE) && sipStack.removeTransactionPendingAck(this)) {
    if (sipStack.isLoggingEnabled()) {
      sipStack.getStackLogger().logDebug("Found tx pending ACK - returning");
    }
    return;
  }
  SIPDialog dialog=(SIPDialog)this.dialog;
  if (((SIPTransactionStack)getSIPStack()).isDialogCreated(this.getOriginalRequest().getMethod()) && (TransactionState.CALLING == this.getRealState() || TransactionState.TRYING == this.getRealState())) {
    dialog.setState(SIPDialog.TERMINATED_STATE);
  }
 else   if (getOriginalRequest().getMethod().equals(Request.BYE)) {
    if (dialog != null && dialog.isTerminatedOnBye())     dialog.setState(SIPDialog.TERMINATED_STATE);
  }
  if (TransactionState.COMPLETED == this.getRealState() && isInviteTransaction()) {
    raiseErrorEvent(SIPTransactionErrorEvent.TIMEOUT_ERROR);
    this.setState(TransactionState.TERMINATED);
    sipStack.removeTransaction(this);
  }
 else   if (TransactionState.COMPLETED == this.getRealState() && !isInviteTransaction()) {
    this.setState(TransactionState.TERMINATED);
    sipStack.removeTransaction(this);
  }
 else   if (TransactionState.CONFIRMED == this.getRealState() && isInviteTransaction()) {
    this.setState(TransactionState.TERMINATED);
    sipStack.removeTransaction(this);
  }
 else   if (!isInviteTransaction() && (TransactionState.COMPLETED == this.getRealState() || TransactionState.CONFIRMED == this.getRealState())) {
    this.setState(TransactionState.TERMINATED);
  }
 else   if (isInviteTransaction() && TransactionState.TERMINATED == this.getRealState()) {
    raiseErrorEvent(SIPTransactionErrorEvent.TIMEOUT_ERROR);
    if (dialog != null)     dialog.setState(SIPDialog.TERMINATED_STATE);
  }
}
