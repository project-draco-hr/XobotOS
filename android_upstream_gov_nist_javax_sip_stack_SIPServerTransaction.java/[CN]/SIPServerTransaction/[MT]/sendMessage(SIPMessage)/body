{
  try {
    SIPResponse transactionResponse;
    int statusCode;
    transactionResponse=(SIPResponse)messageToSend;
    statusCode=transactionResponse.getStatusCode();
    try {
      if (this.getOriginalRequest().getTopmostVia().getBranch() != null)       transactionResponse.getTopmostVia().setBranch(this.getBranch());
 else       transactionResponse.getTopmostVia().removeParameter(ParameterNames.BRANCH);
      if (!this.getOriginalRequest().getTopmostVia().hasPort())       transactionResponse.getTopmostVia().removePort();
    }
 catch (    ParseException ex) {
      ex.printStackTrace();
    }
    if (!transactionResponse.getCSeq().getMethod().equals(getOriginalRequest().getMethod())) {
      sendResponse(transactionResponse);
      return;
    }
    if (getRealState() == TransactionState.TRYING) {
      if (statusCode / 100 == 1) {
        this.setState(TransactionState.PROCEEDING);
      }
 else       if (200 <= statusCode && statusCode <= 699) {
        if (!isInviteTransaction()) {
          if (!isReliable()) {
            this.setState(TransactionState.COMPLETED);
            enableTimeoutTimer(TIMER_J);
          }
 else {
            this.setState(TransactionState.TERMINATED);
          }
        }
 else {
          if (statusCode / 100 == 2) {
            this.disableRetransmissionTimer();
            this.disableTimeoutTimer();
            this.collectionTime=TIMER_J;
            this.setState(TransactionState.TERMINATED);
            if (this.dialog != null)             this.dialog.setRetransmissionTicks();
          }
 else {
            this.setState(TransactionState.COMPLETED);
            if (!isReliable()) {
              enableRetransmissionTimer();
            }
            enableTimeoutTimer(TIMER_H);
          }
        }
      }
    }
 else     if (getRealState() == TransactionState.PROCEEDING) {
      if (isInviteTransaction()) {
        if (statusCode / 100 == 2) {
          this.disableRetransmissionTimer();
          this.disableTimeoutTimer();
          this.collectionTime=TIMER_J;
          this.setState(TransactionState.TERMINATED);
          if (this.dialog != null)           this.dialog.setRetransmissionTicks();
        }
 else         if (300 <= statusCode && statusCode <= 699) {
          this.setState(TransactionState.COMPLETED);
          if (!isReliable()) {
            enableRetransmissionTimer();
          }
          enableTimeoutTimer(TIMER_H);
        }
      }
 else       if (200 <= statusCode && statusCode <= 699) {
        this.setState(TransactionState.COMPLETED);
        if (!isReliable()) {
          disableRetransmissionTimer();
          enableTimeoutTimer(TIMER_J);
        }
 else {
          this.setState(TransactionState.TERMINATED);
        }
      }
    }
 else     if (TransactionState.COMPLETED == this.getRealState()) {
      return;
    }
    try {
      if (sipStack.isLoggingEnabled()) {
        sipStack.getStackLogger().logDebug("sendMessage : tx = " + this + " getState = "+ this.getState());
      }
      lastResponse=transactionResponse;
      this.sendResponse(transactionResponse);
    }
 catch (    IOException e) {
      this.setState(TransactionState.TERMINATED);
      this.collectionTime=0;
      throw e;
    }
  }
  finally {
    this.startTransactionTimer();
  }
}
